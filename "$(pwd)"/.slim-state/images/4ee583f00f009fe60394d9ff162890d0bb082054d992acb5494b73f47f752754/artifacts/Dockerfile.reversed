FROM scratch
# new image

# instruction set group 1

ARG RELEASE
ARG LAUNCHPAD_BUILD_ARCH
LABEL org.opencontainers.image.ref.name=ubuntu
LABEL org.opencontainers.image.version=22.04
ADD file:63d5ab3ef0aab308c0e71cb67292c5467f60deafa9b0418cbb220affcd078444 /
CMD ["/bin/bash"]


# instruction set group 2

RUN echo 'Etc/UTC' > /etc/timezone && \
	ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
	apt-get update && \
	apt-get install -q -y --no-install-recommends tzdata && \
	rm -rf /var/lib/apt/lists/*
RUN apt-get update && \
	apt-get install -q -y --no-install-recommends     dirmngr     gnupg2 && \
	rm -rf /var/lib/apt/lists/*
RUN echo "deb http://packages.ros.org/ros2/ubuntu jammy main" > /etc/apt/sources.list.d/ros2-latest.list
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV ROS_DISTRO=humble
RUN apt-get update && \
	apt-get install -y --no-install-recommends     ros-humble-ros-core=0.10.0-1* && \
	rm -rf /var/lib/apt/lists/*
COPY file:ec5b16a0e777d7d7d041a72ffc817bf5f7b375662afa0c404f3ca36fad1afb90 /
ENTRYPOINT ["/ros_entrypoint.sh"]

CMD ["bash"]

RUN apt-get update && \
	apt-get install --no-install-recommends -y     build-essential     git     python3-colcon-common-extensions     python3-colcon-mixin     python3-rosdep     python3-vcstool && \
	rm -rf /var/lib/apt/lists/*
RUN rosdep init && \
	rosdep update --rosdistro $ROS_DISTRO
RUN colcon mixin add default       https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
	colcon mixin update && \
	colcon metadata add default       https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
	colcon metadata update
RUN apt-get update && \
	apt-get install -y --no-install-recommends     ros-humble-ros-base=0.10.0-1* && \
	rm -rf /var/lib/apt/lists/*

# instruction set group 3

# buildkit.dockerfile.v0 (a buildkit instruction)
ENV ROS_DISTRO=humble
# buildkit.dockerfile.v0 (a buildkit instruction)
SHELL [/bin/bash -c]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","echo","update base 26.09.2023 - test"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","mkdir","-p","/rmp_ws/src"]
# buildkit.dockerfile.v0 (a buildkit instruction)
WORKDIR /rmp_ws/src
# buildkit.dockerfile.v0 (a buildkit instruction)
COPY dependencies.arm64.repos .
# buildkit.dockerfile.v0 (a buildkit instruction)
COPY dependencies.amd64.repos .
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","echo","Hardware platform is: $(uname -m)"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","uname","-a"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","echo","update base 29.08.2023"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","if","[","$(uname -m)","=","x86_64","];","then","echo","Copying files for linux/amd64;","mv","dependencies.amd64.repos","dependencies.repos;","else","echo","Copying files for linux/arm64;","mv","dependencies.arm64.repos","dependencies.repos;","fi"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","vcs","import","<","dependencies.repos"]
# buildkit.dockerfile.v0 (a buildkit instruction)
WORKDIR /rmp_ws
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","source","/opt/ros/${ROS_DISTRO}/setup.bash","&&","apt-get","update","-y","&&","apt-get","install","-y","--no-install-recommends","ros-${ROS_DISTRO}-foxglove-bridge","&&","rosdep","install","--from-paths","src","--ignore-src","--rosdistro","${ROS_DISTRO}","-y"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","source","/opt/ros/${ROS_DISTRO}/setup.bash","&&","colcon","build","--symlink-install"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","apt-get","install","-y","--no-install-recommends","ros-${ROS_DISTRO}-rmw-cyclonedds-cpp","ros-${ROS_DISTRO}-xacro","&&","rm","-rf","/var/lib/apt/lists/*"]
# buildkit.dockerfile.v0 (a buildkit instruction)
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
# buildkit.dockerfile.v0 (a buildkit instruction)
ENV UNDERLAY_WS=
# buildkit.dockerfile.v0 (a buildkit instruction)
COPY ./docker/entrypoint.sh /
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","chmod","+x","/entrypoint.sh"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","vcs","pull","src"]
# buildkit.dockerfile.v0 (a buildkit instruction)
ENTRYPOINT ["/entrypoint.sh"]

# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","echo","update overlay 26.09.2023-take-2"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","mkdir","-p","/overlay_ws/src"]
# buildkit.dockerfile.v0 (a buildkit instruction)
WORKDIR /overlay_ws/src
# buildkit.dockerfile.v0 (a buildkit instruction)
COPY overlay.repos .
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","vcs","import","<","overlay.repos"]
# buildkit.dockerfile.v0 (a buildkit instruction)
WORKDIR /overlay_ws
# buildkit.dockerfile.v0 (a buildkit instruction)
ENV DEBIAN_FRONTEND=noninteractive
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","source","/rmp_ws/install/setup.bash","&&","apt-get","update","&&","DEBIAN_FRONTEND=noninteractive","apt-get","install","nano","ros-humble-robot-localization","ros-humble-joint-state-publisher","ros-humble-laser-filters","-y","&&","rosdep","install","--from-paths","src","--ignore-src","--rosdistro","${ROS_DISTRO}","-y","&&","rm","-rf","/var/lib/apt/lists/*"]

# instruction set group 4

# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","source","/rmp_ws/install/setup.bash","&&","colcon","build","--symlink-install"]
# buildkit.dockerfile.v0 (a buildkit instruction)
COPY ./docker/entrypoint.sh /
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","chmod","+x","/entrypoint.sh"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","vcs","pull","src"]
# buildkit.dockerfile.v0 (a buildkit instruction)
ENTRYPOINT ["/entrypoint.sh"]

# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","source","/rmp_ws/install/setup.bash","&&","apt-get","update","&&","apt-get","install","-y","--no-install-recommends","ros-${ROS_DISTRO}-rviz2","&&","rm","-rf","/var/lib/apt/lists/*"]
# buildkit.dockerfile.v0 (a buildkit instruction)
RUN ["/bin/bash","-c","vcs","pull","src"]
# buildkit.dockerfile.v0 (a buildkit instruction)
ENTRYPOINT ["/entrypoint.sh"]

# buildkit.dockerfile.v0 (a buildkit instruction)
LABEL org.opencontainers.image.source=https://github.com/bjoernellens1/ros2_rmp
# end of image: ghcr.io/bjoernellens1/ros2_rmp/rmp:guis (id:  tags: ghcr.io/bjoernellens1/ros2_rmp/rmp:guis)
